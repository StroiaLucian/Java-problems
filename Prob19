Given the root of a binary tree, return the inorder traversal of its nodes' values.

 

Example 1:


Input: root = [1,null,2,3]
Output: [1,3,2]
Example 2:

Input: root = []
Output: []


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
    List<Integer> rezultat= new ArrayList<Integer>();
    generateInorder(root,rezultat);
    return rezultat;
    }
    public void generateInorder(TreeNode root, List<Integer> rezultat){
        if(root==null){ return;}
        generateInorder(root.left,rezultat);
        rezultat.add(root.val);
        generateInorder(root.right,rezultat);

    }
}
