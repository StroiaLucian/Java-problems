Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

Follow up: The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.



class Solution {
    public int[] mergeArrays(int[] nums1, int[] nums2){
        int i=0,j=0,k=0;
        int[] r= new int[nums1.length+nums2.length];
        while(i<nums1.length && j<nums2.length)
        {
            if(nums1[i]<nums2[j]) {
                r[k]=nums1[i];
                i++;
            }
            else {
                r[k]=nums2[j];
                j++;
            }
            k++;
        }
        while(i<nums1.length)
        {
            r[k]=nums1[i];
            i++;
            k++;
        }
        while(j<nums2.length)
        {
            r[k]=nums2[j];
            j++;
            k++;
        }
        return r;
    }
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        if(nums1.length==0 && nums2.length==1) return nums2[0];
        else if(nums2.length==0 && nums1.length==0) return nums1[0];
        int[] rezultatIntermediar= mergeArrays(nums1,nums2);
        if(rezultatIntermediar.length%2==0)
        {
            //daca avem un numar par de elemente
            return (rezultatIntermediar[rezultatIntermediar.length/2 -1] + rezultatIntermediar[rezultatIntermediar.length/2 ])/2.0;
        }else{
            //daca e un numar impar de elemente
            return rezultatIntermediar[rezultatIntermediar.length/2 ];
        }
    }
}


