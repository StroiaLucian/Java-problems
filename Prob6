Find the minimum length word from a given dictionary words, which has all the letters from the string licensePlate. Such a word is said to complete the given string licensePlate

Here, for letters we ignore case. For example, "P" on the licensePlate still matches "p" on the word.

It is guaranteed an answer exists. If there are multiple answers, return the one that occurs first in the array.

The license plate might have the same letter occurring multiple times. For example, given a licensePlate of "PP", the word "pair" does not complete the licensePlate, but the word "supper" does.

Example 1:
Input: licensePlate = "1s3 PSt", words = ["step", "steps", "stripe", "stepple"]
Output: "steps"
Explanation: The smallest length word that contains the letters "S", "P", "S", and "T".
Note that the answer is not "step", because the letter "s" must occur in the word twice.
Also note that we ignored case for the purposes of comparing whether a letter exists in the word.


class Solution {
    public String shortestCompletingWord(String licensePlate, String[] words) {
        String rezultat="";
        int minim=0;
        String licensePlate2=licensePlate.toLowerCase();//avem toate literele cuvantului de pe placuta de aceeasi dimensiune.
        char[] litere=new char[licensePlate2.length()];
        int k=0;
        for(char c:licensePlate2.toCharArray())
            if(c>=97 && c<=122)
            {
                litere[k]=c;
                k++;
            }
        int nr=0;
        int index=0;
        int ok=0;
        int ok2=0;
        char[] cuvant;
        for(int j=0;j<words.length;j++){
            cuvant= new char[words[j].length()];
            for(int i=0;i<words[j].length();i++)
            {
            cuvant[i]=words[j].charAt(i);
            }
            // acum avem in cuvant toate literele cu false.
            for(char c:litere)
            {
                for(int o=0;o<words[j].length();o++)
                {
                    if(c == cuvant[o] )
                    {
                        cuvant[o]=' ';
                        ok=1;
                        break;
                    }
                }
                if(ok==0) // inseamna ca nu am gasit o anumita litera de pe placuta in cuvantul respectiv,
                {
                break;
                }else nr++;
                ok=0;
            }
            if(nr==k ) // inseamna ca am gasit un cuvant un cuvant care contine literele cautate.
            {   
                if(ok2==0){
                index=j;
                System.out.println(words[index]);
                ok2=1;}
                else{
                    if(words[index].length()>words[j].length())
                        index=j;
                } // inseamna ca am mai gasit un cuvant care contine literele respective
                
            }
        
            nr=0;
        }
        return words[index]+"";
    }
}
