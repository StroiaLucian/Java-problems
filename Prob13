Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Example:

Input:
[
  [1,3,1],
  [1,5,1],
  [4,2,1]
]
Output: 7
Explanation: Because the path 1→3→1→1→1 minimizes the sum.


class Solution {
    public int minPathSum(int[][] grid) {
    // mergem pe aceeasi tactica folosita la uniquePath insa integram si valorile care se afla in matricea primita ca si input.
    int[][] matrice= new int[grid.length][grid[0].length];
    matrice[0][0]= grid[0][0];
    int m=grid.length;
    int n=grid[0].length;
    for(int i=1; i<m;i++){
        matrice[i][0]=grid[i][0]+matrice[i-1][0];
    }
    for(int j=1; j<n;j++){
        matrice[0][j]=grid[0][j]+matrice[0][j-1];
    }
    for(int i=1;i<m;i++){
        for(int j=1;j<n;j++){
            matrice[i][j]= Math.min(matrice[i-1][j],matrice[i][j-1])+ grid[i][j];
    }
    }
        return matrice[m-1][n-1];
    }
}
